#!/usr/bin/env bash

set -eu

source "${HALCYON_TOP_DIR}/src.sh"


slug_post_build_hook () {
	expect_vars HALCYON_DIR
	expect_existing "${HALCYON_DIR}/ghc/.halcyon-tag" "${HALCYON_DIR}/cabal/.halcyon-tag"

	local tag source_dir slug_dir
	expect_args tag source_dir slug_dir -- "$@"

	if (( HALCYON_NO_BUILD_DEPENDENCIES )); then
		log_warning 'Cannot bootstrap Haste'
		return 1
	fi

	log 'Installing Haste'

	# NOTE: Bootstrapping Haste requires haste-compiler to be already installed in /

	cp -R "${slug_dir}/." '/' |& quote || die

	if [[ -d '/app/.cabal' && ! -f '/app/.cabal/.halcyon-mark' ]]; then
		log_error 'Unexpected existing /app/.cabal'
		log
		log 'To continue, remove /app/.cabal and /app/.haste'
		die
	fi
	if [[ -d '/app/.haste' && ! -f '/app/.haste/.halcyon-mark' ]]; then
		log_error 'Unexpected existing /app/.haste'
		log
		log 'To continue, remove /app/.cabal and /app/.haste'
		die
	fi
	rm -rf '/app/.cabal' '/app/.haste' || die

	# NOTE: Haste must be bootstrapped in /app, as it hard-codes paths to HOME/.haste

	export HOME='/app'

	# NOTE: Haste does not support Cabal sandboxes.

	mkdir -p '/app/.cabal' || die
	touch '/app/.cabal/.halcyon-mark' || die
	grep -v 'require-sandbox:' "${HALCYON_DIR}/cabal/.halcyon-cabal.config" >'/app/.cabal/config' || die

	# NOTE: Using haste requires Cabal to have already generated
	# HOME/.cabal/setup-exe-cache
	# https://github.com/valderman/haste-compiler/issues/257

	if [[ ! -f '/app/.cabal/setup-exe-cache' ]]; then
		local dummy_sandbox
		dummy_sandbox="$( get_tmp_dir 'halcyon-dummy-sandbox' )" || die

		mkdir -p "${dummy_sandbox}" || die
		cabal_do "${dummy_sandbox}" sandbox init --sandbox '.' |& quote || die
		cabal_do "${dummy_sandbox}" install 'acme-dont' |& quote || die
		rm -rf "${dummy_sandbox}" || die
	fi
	expect_existing '/app/.cabal/setup-exe-cache'

	log 'Bootstrapping Haste'

	if ! ( cd '/app' && haste-boot |& quote ); then
		die 'Failed to bootstrap Haste'
	fi

	# NOTE: Haste installs the Clojure compiler next to hastec.  Files copied into
	# slug_dir/app will be present in HOME on a dyno.

	mv "${HALCYON_DIR}/slug/bin/compiler.jar" "${slug_dir}${HALCYON_DIR}/slug/bin/compiler.jar" || die
	mv '/app/.haste' "${slug_dir}/app/.haste" || die

	local bootstrapped_size
	bootstrapped_size=$( size_tree "${slug_dir}/app/.haste" ) || die

	log "Haste bootstrapped, ${bootstrapped_size}"

	# NOTE: Bootstrapping Haste clobbers /app/.cabal

	rm -rf '/app/.cabal' || die
	link_cabal_config || die
}


slug_post_build_hook "$@" || die
