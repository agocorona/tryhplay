{-# LANGUAGE  DeriveDataTypeable #-}
module Main where
import Haste
import Haste.DOM(withElem)
import Haste.HPlay.View
import Control.Applicative
import Prelude hiding (div,all)



main=  runBody $
   p  "This widget sum two numbers and append the result. Using applicative and monadic expressions" ++>
  (p <<< do
     r <- (+) <$> fromStr "first number"  ++> br
                   ++> inputInt Nothing `fire` OnKeyUp  <++ br
              <*> fromStr "second number " ++> br
                   ++> inputInt Nothing `fire` OnKeyUp  <++ br
     p <<< fromStr "result: " ++>  b (show r) ++> return())
